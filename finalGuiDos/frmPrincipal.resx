<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wA=
</value>
  </data>
</root>